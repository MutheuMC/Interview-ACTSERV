# Generated by Django 4.2.8 on 2025-10-03 14:17

from django.conf import settings
import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="FieldResponse",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "value",
                    models.JSONField(
                        blank=True,
                        help_text="Actual field value (text, number, array, etc.)",
                        null=True,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Form",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
                ("description", models.TextField(blank=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "notification_emails",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.EmailField(max_length=254),
                        blank=True,
                        default=list,
                        help_text="Email addresses to notify on submission",
                        size=None,
                    ),
                ),
                ("webhook_url", models.URLField(blank=True, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_forms",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="FormField",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Field identifier (snake_case recommended)",
                        max_length=100,
                    ),
                ),
                ("label", models.CharField(max_length=255)),
                (
                    "field_type",
                    models.CharField(
                        choices=[
                            ("text", "Text"),
                            ("textarea", "Text Area"),
                            ("number", "Number"),
                            ("email", "Email"),
                            ("phone", "Phone"),
                            ("date", "Date"),
                            ("select", "Select Dropdown"),
                            ("multi_select", "Multi Select"),
                            ("radio", "Radio Buttons"),
                            ("checkbox", "Checkbox"),
                            ("file", "File Upload"),
                            ("multi_file", "Multiple File Upload"),
                        ],
                        max_length=20,
                    ),
                ),
                ("order", models.PositiveIntegerField(default=0)),
                (
                    "config",
                    models.JSONField(
                        default=dict,
                        help_text="\n        Configuration options:\n        - required: bool\n        - placeholder: str\n        - help_text: str\n        - default_value: any\n        - min_length, max_length: int (text)\n        - min_value, max_value: number (number)\n        - options: list (select, radio, multi_select)\n        - accept: str (file types)\n        - max_files: int (multi_file)\n        - max_size_mb: number (file)\n        ",
                    ),
                ),
            ],
            options={
                "ordering": ["order", "created_at"],
            },
        ),
        migrations.CreateModel(
            name="ValidationRule",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "rule_type",
                    models.CharField(
                        choices=[
                            ("required", "Required"),
                            ("min_length", "Minimum Length"),
                            ("max_length", "Maximum Length"),
                            ("pattern", "Regex Pattern"),
                            ("min_value", "Minimum Value"),
                            ("max_value", "Maximum Value"),
                            ("conditional", "Conditional"),
                            ("file_type", "File Type"),
                            ("file_size", "File Size"),
                            ("email", "Email Format"),
                            ("phone", "Phone Format"),
                            ("custom", "Custom Validation"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "config",
                    models.JSONField(
                        default=dict,
                        help_text="\n        Rule configuration based on type:\n        - conditional: {condition: {...}, then: {...}}\n        - pattern: {regex: str}\n        - min_length/max_length: {value: int}\n        - file_type: {allowed: [str]}\n        - file_size: {max_mb: number}\n        ",
                    ),
                ),
                ("error_message", models.CharField(max_length=255)),
                (
                    "field",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="validation_rules",
                        to="forms.formfield",
                    ),
                ),
            ],
            options={
                "ordering": ["created_at"],
            },
        ),
        migrations.CreateModel(
            name="FormVersion",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("version_number", models.PositiveIntegerField()),
                (
                    "schema_json",
                    models.JSONField(
                        default=dict, help_text="Complete JSON schema of form structure"
                    ),
                ),
                (
                    "form",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="versions",
                        to="forms.form",
                    ),
                ),
            ],
            options={
                "ordering": ["-version_number"],
            },
        ),
        migrations.CreateModel(
            name="FormSubmission",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("submitted", "Submitted"),
                            ("under_review", "Under Review"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                        ],
                        default="draft",
                        max_length=20,
                    ),
                ),
                ("submitted_at", models.DateTimeField(blank=True, null=True)),
                ("reviewed_at", models.DateTimeField(blank=True, null=True)),
                ("review_notes", models.TextField(blank=True)),
                (
                    "form_version",
                    models.ForeignKey(
                        help_text="Links to specific form version for historical integrity",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="submissions",
                        to="forms.formversion",
                    ),
                ),
                (
                    "reviewed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="reviewed_submissions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "submitted_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="form_submissions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddField(
            model_name="formfield",
            name="form_version",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="fields",
                to="forms.formversion",
            ),
        ),
        migrations.AddField(
            model_name="form",
            name="current_version",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="current_for_form",
                to="forms.formversion",
            ),
        ),
        migrations.CreateModel(
            name="FileUpload",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("file", models.FileField(upload_to="form_uploads/%Y/%m/%d/")),
                ("original_filename", models.CharField(max_length=255)),
                (
                    "file_size",
                    models.PositiveIntegerField(
                        help_text="File size in bytes",
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                ("mime_type", models.CharField(max_length=100)),
                (
                    "field_response",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="files",
                        to="forms.fieldresponse",
                    ),
                ),
            ],
            options={
                "ordering": ["created_at"],
            },
        ),
        migrations.AddField(
            model_name="fieldresponse",
            name="field",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="responses",
                to="forms.formfield",
            ),
        ),
        migrations.AddField(
            model_name="fieldresponse",
            name="submission",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="field_responses",
                to="forms.formsubmission",
            ),
        ),
        migrations.CreateModel(
            name="NotificationLog",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "channel",
                    models.CharField(
                        choices=[
                            ("email", "Email"),
                            ("webhook", "Webhook"),
                            ("slack", "Slack"),
                        ],
                        max_length=20,
                    ),
                ),
                ("recipient", models.CharField(max_length=255)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("sent", "Sent"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("attempts", models.PositiveIntegerField(default=0)),
                ("error_message", models.TextField(blank=True)),
                ("sent_at", models.DateTimeField(blank=True, null=True)),
                (
                    "submission",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notifications",
                        to="forms.formsubmission",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["submission", "channel"],
                        name="forms_notif_submiss_d2b5d5_idx",
                    ),
                    models.Index(
                        fields=["status", "-created_at"],
                        name="forms_notif_status_d70b18_idx",
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="formversion",
            index=models.Index(
                fields=["form", "-version_number"],
                name="forms_formv_form_id_5cb7d6_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="formversion",
            unique_together={("form", "version_number")},
        ),
        migrations.AddIndex(
            model_name="formsubmission",
            index=models.Index(
                fields=["status", "-created_at"], name="forms_forms_status_2a2f58_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="formsubmission",
            index=models.Index(
                fields=["submitted_by", "-created_at"],
                name="forms_forms_submitt_249545_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="formsubmission",
            index=models.Index(
                fields=["form_version", "-created_at"],
                name="forms_forms_form_ve_7f3e84_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="formfield",
            index=models.Index(
                fields=["form_version", "order"], name="forms_formf_form_ve_694ba5_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="formfield",
            unique_together={("form_version", "name")},
        ),
        migrations.AddIndex(
            model_name="form",
            index=models.Index(
                fields=["is_active", "-created_at"],
                name="forms_form_is_acti_3e5cd1_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="fieldresponse",
            index=models.Index(
                fields=["submission", "field"], name="forms_field_submiss_9d18e9_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="fieldresponse",
            unique_together={("submission", "field")},
        ),
    ]
